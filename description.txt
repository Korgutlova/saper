
библиотека тестирования tasty
                        servant

Общие типы данных
  Уровень сложности иигры (easy, hard, megahard)
    or
  Задание парметров (ширина, длина поля, количество бомб)
  Состяние игры (время, поле, количество оставшихся бомб)
  Состояние клетки (мина, посещенная или цифра клетки)
  Поле игры (двумерная матрица состояний клеток)
  Действие с клеткой (флажок, открытие)
  Координата (x,y)
  Ход пользователя (координата, действие с клеткой)
  


module TypesProject where

type Coord = (Int, Int) 

data Action = Open | Flag deriving(Show)

data StateCell a  = Mina | NotOpen | Cell a deriving(Show)

type Board = [[StateCell Int]]

data Level = Easy | Hard | MegaHard deriving(Show)

data Param = Int Int Int

data Game m = Game { cur_board :: Board,
					 last_mina :: m
					}
type UserMove = (Coord, Action)


-- example of board 
board = [ [Mina, Cell 1, Cell 2, Cell 3] 
		  [NotOpen, Cell 3, Cell 4, Mina]
		  [Cell 1, Cell 2, Cell 3, Mina]
		] 

-- newboard = [[Cell 0 Cell 0 Cell 0]]
-- generateMina :: Int -> Board -> Board
-- generateMina 0 b = b
-- generateMina a b = generate a - 1 b[0] 
                  
   
